{"version":3,"sources":["web/file.js"],"names":["PubNubFile","config","File","input","inputType","name","mimeType","type","response","text","data","undefined","Error","Promise","resolve","reject","reader","FileReader","addEventListener","result","error","readAsText"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport { IFile, FileClass } from '../core/components/file';\n\ntype PubNubFileWebConstructor =\n  | File\n  | {|\n      data: string,\n      name: string,\n      mimeType: string,\n    |}\n  | {|\n      name: string,\n      mimeType: string,\n      response?: {\n        text: string,\n        name: string,\n        type: string,\n      },\n    |};\n\nconst PubNubFile: FileClass = class PubNubFile implements IFile {\n  static supportsFile = typeof File !== 'undefined';\n  static supportsBuffer = false;\n  static supportsStream = false;\n  static supportsString = true;\n\n  static create(config: PubNubFileWebConstructor) {\n    return new this(config);\n  }\n\n  input: any;\n  inputType: 'file';\n\n  name: string;\n  mimeType: string;\n\n  constructor(config: PubNubFileWebConstructor) {\n    if (config instanceof File) {\n      this.input = config;\n      this.inputType = 'file';\n\n      this.name = this.input.name;\n      this.mimeType = this.input.type;\n    } else if (config.response) {\n      this.input = new File([config.response.text], config.response.name ?? config.name ?? '', {\n        type: config.response.type,\n      });\n\n      this.inputType = 'file';\n      this.name = this.input.name;\n      this.mimeType = this.input.type;\n    } else if (config.data) {\n      this.input = new File([config.data], config.name, { type: config.mimeType });\n      this.inputType = 'file';\n\n      this.name = config.name;\n      this.mimeType = config.mimeType;\n    }\n\n    if (this.input === undefined) {\n      throw new Error(\"Couldn't construct a file out of supplied options.\");\n    }\n\n    if (this.name === undefined) {\n      throw new Error(\"Couldn't guess filename out of the options. Please provide one.\");\n    }\n  }\n\n  async toBuffer() {\n    throw new Error('This feature is only supported in Node.js environments.');\n  }\n\n  async toStream() {\n    throw new Error('This feature is only supported in Node.js environments.');\n  }\n\n  async toString() {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', () => {\n        if (typeof reader.result === 'string') {\n          return resolve(reader.result);\n        }\n      });\n\n      reader.addEventListener('error', () => {\n        reject(reader.error);\n      });\n\n      reader.readAsText(this.input);\n    });\n  }\n\n  async toFile() {\n    return this.input;\n  }\n};\n\nexport default PubNubFile;\n"],"file":"file.js"}