{"version":3,"sources":["core/endpoints/file_upload/download_file.js"],"names":["endpoint","getOperation","operationConstants","PNDownloadFileOperation","validateParams","_","params","channel","name","id","getURL","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","ignoreBody","getAuthToken","tokenManager","getToken","prepareParams","handleResponse","response","getFile","create","stream","res","mimeType","headers"],"mappings":";;;;;;;;;AAGA;;AAGA,IAAMA,QAAgE,GAAG;AACvEC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,uBAAzB;AAAA,GADyD;AAGvEC,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,MAAJ,EAAe;AAC7B,QAAI,EAACA,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAAJ,EAAsB;AACpB,aAAO,wBAAP;AACD;;AAED,QAAI,EAACD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,IAAT,CAAJ,EAAmB;AACjB,aAAO,qBAAP;AACD;;AAED,QAAI,EAACF,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEG,EAAT,CAAJ,EAAiB;AACf,aAAO,mBAAP;AACD;AACF,GAfsE;AAiBvEC,EAAAA,MAAM,EAAE,sBAAaJ,MAAb;AAAA,QAAGK,MAAH,QAAGA,MAAH;AAAA,+BAAqCA,MAAM,CAACC,YAA5C,uBAAqEN,MAAM,CAACC,OAA5E,oBAA6FD,MAAM,CAACG,EAApG,cAA0GH,MAAM,CAACE,IAAjH;AAAA,GAjB+D;AAmBvEK,EAAAA,iBAAiB,EAAE;AAAA,QAAGF,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACG,qBAAP,EAAhB;AAAA,GAnBoD;AAqBvEC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GArBsD;AAsBvEC,EAAAA,UAAU,EAAE;AAAA,WAAM,IAAN;AAAA,GAtB2D;AAwBvEC,EAAAA,YAAY,EAAE;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WAAsBA,YAAY,CAACC,QAAb,CAAsB,YAAtB,CAAtB;AAAA,GAxByD;AA0BvEC,EAAAA,aAAa,EAAE;AAAA,WAAO,EAAP;AAAA,GA1BwD;AA4BvEC,EAAAA,cAAc,EAAE,+BAAcC,QAAd,EAAwBhB,MAAxB;AAAA,QAAGiB,OAAH,SAAGA,OAAH;AAAA,WAAuDA,OAAO,GAAGC,MAAV,CAAiB;AACtFC,MAAAA,MAAM,EAAEH,QAAQ,CAACA,QAAT,CAAkBI,GAD4D;AAEtFlB,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFyE;AAGtFmB,MAAAA,QAAQ,EAAEL,QAAQ,CAACM,OAAT,CAAiB,cAAjB,CAH4E;AAItFN,MAAAA,QAAQ,EAAEA,QAAQ,CAACA;AAJmE,KAAjB,CAAvD;AAAA;AA5BuD,CAAzE;eAoCetB,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../endpoint';\nimport operationConstants from '../../constants/operations';\nimport type { DownloadFileParams, DownloadFileResult } from './types';\n\nconst endpoint: EndpointConfig<DownloadFileParams, DownloadFileResult> = {\n  getOperation: () => operationConstants.PNDownloadFileOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return \"channel can't be empty\";\n    }\n\n    if (!params?.name) {\n      return \"name can't be empty\";\n    }\n\n    if (!params?.id) {\n      return \"id can't be empty\";\n    }\n  },\n\n  getURL: ({ config }, params) => `/v1/files/${config.subscribeKey}/channels/${params.channel}/files/${params.id}/${params.name}`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n  ignoreBody: () => true,\n\n  getAuthToken: ({ tokenManager }) => tokenManager.getToken('fileUpload'),\n\n  prepareParams: () => ({}),\n\n  handleResponse: ({ getFile }, response, params): DownloadFileResult => getFile().create({\n    stream: response.response.res,\n    name: params.name,\n    mimeType: response.headers['content-type'],\n    response: response.response,\n  }),\n};\n\nexport default endpoint;\n"],"file":"download_file.js"}